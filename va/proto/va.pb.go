// Code generated by protoc-gen-go. DO NOT EDIT.
// source: va/proto/va.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/zzma/boulder/core/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsCAAValidRequest struct {
	// NOTE: Domain may be a name with a wildcard prefix (e.g. `*.example.com`)
	Domain               *string  `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
	ValidationMethod     *string  `protobuf:"bytes,2,opt,name=validationMethod" json:"validationMethod,omitempty"`
	AccountURIID         *int64   `protobuf:"varint,3,opt,name=accountURIID" json:"accountURIID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsCAAValidRequest) Reset()         { *m = IsCAAValidRequest{} }
func (m *IsCAAValidRequest) String() string { return proto.CompactTextString(m) }
func (*IsCAAValidRequest) ProtoMessage()    {}
func (*IsCAAValidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b39cc52ec1cb3a92, []int{0}
}

func (m *IsCAAValidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsCAAValidRequest.Unmarshal(m, b)
}
func (m *IsCAAValidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsCAAValidRequest.Marshal(b, m, deterministic)
}
func (m *IsCAAValidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsCAAValidRequest.Merge(m, src)
}
func (m *IsCAAValidRequest) XXX_Size() int {
	return xxx_messageInfo_IsCAAValidRequest.Size(m)
}
func (m *IsCAAValidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsCAAValidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsCAAValidRequest proto.InternalMessageInfo

func (m *IsCAAValidRequest) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *IsCAAValidRequest) GetValidationMethod() string {
	if m != nil && m.ValidationMethod != nil {
		return *m.ValidationMethod
	}
	return ""
}

func (m *IsCAAValidRequest) GetAccountURIID() int64 {
	if m != nil && m.AccountURIID != nil {
		return *m.AccountURIID
	}
	return 0
}

// If CAA is valid for the requested domain, the problem will be empty
type IsCAAValidResponse struct {
	Problem              *proto1.ProblemDetails `protobuf:"bytes,1,opt,name=problem" json:"problem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *IsCAAValidResponse) Reset()         { *m = IsCAAValidResponse{} }
func (m *IsCAAValidResponse) String() string { return proto.CompactTextString(m) }
func (*IsCAAValidResponse) ProtoMessage()    {}
func (*IsCAAValidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b39cc52ec1cb3a92, []int{1}
}

func (m *IsCAAValidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsCAAValidResponse.Unmarshal(m, b)
}
func (m *IsCAAValidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsCAAValidResponse.Marshal(b, m, deterministic)
}
func (m *IsCAAValidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsCAAValidResponse.Merge(m, src)
}
func (m *IsCAAValidResponse) XXX_Size() int {
	return xxx_messageInfo_IsCAAValidResponse.Size(m)
}
func (m *IsCAAValidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsCAAValidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsCAAValidResponse proto.InternalMessageInfo

func (m *IsCAAValidResponse) GetProblem() *proto1.ProblemDetails {
	if m != nil {
		return m.Problem
	}
	return nil
}

type PerformValidationRequest struct {
	Domain               *string           `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
	Challenge            *proto1.Challenge `protobuf:"bytes,2,opt,name=challenge" json:"challenge,omitempty"`
	Authz                *AuthzMeta        `protobuf:"bytes,3,opt,name=authz" json:"authz,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PerformValidationRequest) Reset()         { *m = PerformValidationRequest{} }
func (m *PerformValidationRequest) String() string { return proto.CompactTextString(m) }
func (*PerformValidationRequest) ProtoMessage()    {}
func (*PerformValidationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b39cc52ec1cb3a92, []int{2}
}

func (m *PerformValidationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformValidationRequest.Unmarshal(m, b)
}
func (m *PerformValidationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformValidationRequest.Marshal(b, m, deterministic)
}
func (m *PerformValidationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformValidationRequest.Merge(m, src)
}
func (m *PerformValidationRequest) XXX_Size() int {
	return xxx_messageInfo_PerformValidationRequest.Size(m)
}
func (m *PerformValidationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformValidationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PerformValidationRequest proto.InternalMessageInfo

func (m *PerformValidationRequest) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *PerformValidationRequest) GetChallenge() *proto1.Challenge {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *PerformValidationRequest) GetAuthz() *AuthzMeta {
	if m != nil {
		return m.Authz
	}
	return nil
}

type AuthzMeta struct {
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	RegID                *int64   `protobuf:"varint,2,opt,name=regID" json:"regID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthzMeta) Reset()         { *m = AuthzMeta{} }
func (m *AuthzMeta) String() string { return proto.CompactTextString(m) }
func (*AuthzMeta) ProtoMessage()    {}
func (*AuthzMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_b39cc52ec1cb3a92, []int{3}
}

func (m *AuthzMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthzMeta.Unmarshal(m, b)
}
func (m *AuthzMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthzMeta.Marshal(b, m, deterministic)
}
func (m *AuthzMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthzMeta.Merge(m, src)
}
func (m *AuthzMeta) XXX_Size() int {
	return xxx_messageInfo_AuthzMeta.Size(m)
}
func (m *AuthzMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthzMeta.DiscardUnknown(m)
}

var xxx_messageInfo_AuthzMeta proto.InternalMessageInfo

func (m *AuthzMeta) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AuthzMeta) GetRegID() int64 {
	if m != nil && m.RegID != nil {
		return *m.RegID
	}
	return 0
}

type ValidationResult struct {
	Records              []*proto1.ValidationRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
	Problems             *proto1.ProblemDetails     `protobuf:"bytes,2,opt,name=problems" json:"problems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ValidationResult) Reset()         { *m = ValidationResult{} }
func (m *ValidationResult) String() string { return proto.CompactTextString(m) }
func (*ValidationResult) ProtoMessage()    {}
func (*ValidationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b39cc52ec1cb3a92, []int{4}
}

func (m *ValidationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationResult.Unmarshal(m, b)
}
func (m *ValidationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationResult.Marshal(b, m, deterministic)
}
func (m *ValidationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationResult.Merge(m, src)
}
func (m *ValidationResult) XXX_Size() int {
	return xxx_messageInfo_ValidationResult.Size(m)
}
func (m *ValidationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationResult.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationResult proto.InternalMessageInfo

func (m *ValidationResult) GetRecords() []*proto1.ValidationRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *ValidationResult) GetProblems() *proto1.ProblemDetails {
	if m != nil {
		return m.Problems
	}
	return nil
}

func init() {
	proto.RegisterType((*IsCAAValidRequest)(nil), "va.IsCAAValidRequest")
	proto.RegisterType((*IsCAAValidResponse)(nil), "va.IsCAAValidResponse")
	proto.RegisterType((*PerformValidationRequest)(nil), "va.PerformValidationRequest")
	proto.RegisterType((*AuthzMeta)(nil), "va.AuthzMeta")
	proto.RegisterType((*ValidationResult)(nil), "va.ValidationResult")
}

func init() { proto.RegisterFile("va/proto/va.proto", fileDescriptor_b39cc52ec1cb3a92) }

var fileDescriptor_b39cc52ec1cb3a92 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x3b, 0x6f, 0xea, 0x30,
	0x18, 0x25, 0x89, 0xb8, 0x5c, 0xbe, 0xdc, 0x07, 0x58, 0x80, 0x22, 0xd4, 0x01, 0xb9, 0x0b, 0xaa,
	0xd4, 0x40, 0xb3, 0x77, 0x48, 0xc9, 0x92, 0x01, 0x15, 0x59, 0x2a, 0x43, 0x37, 0x37, 0x71, 0x21,
	0x52, 0x88, 0xa9, 0xed, 0x64, 0x68, 0xf7, 0xfe, 0xee, 0x2a, 0x4e, 0x78, 0x14, 0x5a, 0x75, 0xb3,
	0xcf, 0x39, 0xd2, 0x79, 0xd8, 0xd0, 0x2d, 0xe8, 0x64, 0x2b, 0xb8, 0xe2, 0x93, 0x82, 0xba, 0xfa,
	0x80, 0xcc, 0x82, 0x0e, 0xfb, 0x11, 0x17, 0xac, 0x26, 0xca, 0x63, 0x45, 0xe1, 0x37, 0xe8, 0x86,
	0x72, 0xe6, 0xfb, 0x4b, 0x9a, 0x26, 0x31, 0x61, 0x2f, 0x39, 0x93, 0x0a, 0x0d, 0xe0, 0x57, 0xcc,
	0x37, 0x34, 0xc9, 0x1c, 0x63, 0x64, 0x8c, 0xdb, 0xa4, 0xbe, 0xa1, 0x2b, 0xe8, 0x14, 0xa5, 0x8e,
	0xaa, 0x84, 0x67, 0x73, 0xa6, 0xd6, 0x3c, 0x76, 0x4c, 0xad, 0x38, 0xc3, 0x11, 0x86, 0x3f, 0x34,
	0x8a, 0x78, 0x9e, 0xa9, 0x07, 0x12, 0x86, 0x81, 0x63, 0x8d, 0x8c, 0xb1, 0x45, 0x3e, 0x61, 0x38,
	0x00, 0x74, 0x6c, 0x2e, 0xb7, 0x3c, 0x93, 0x0c, 0xb9, 0xd0, 0xda, 0x0a, 0xfe, 0x94, 0xb2, 0x8d,
	0xb6, 0xb7, 0xbd, 0x9e, 0xab, 0x03, 0x2f, 0x2a, 0x30, 0x60, 0x8a, 0x26, 0xa9, 0x24, 0x3b, 0x11,
	0x7e, 0x37, 0xc0, 0x59, 0x30, 0xf1, 0xcc, 0xc5, 0x66, 0xb9, 0x4f, 0xf1, 0x53, 0x95, 0x6b, 0x68,
	0x47, 0x6b, 0x9a, 0xa6, 0x2c, 0x5b, 0x31, 0xdd, 0xc1, 0xf6, 0xfe, 0x57, 0x36, 0xb3, 0x1d, 0x4c,
	0x0e, 0x0a, 0x74, 0x09, 0x4d, 0x9a, 0xab, 0xf5, 0xab, 0xae, 0x61, 0x7b, 0x7f, 0xdd, 0x82, 0xba,
	0x7e, 0x09, 0xcc, 0x99, 0xa2, 0xa4, 0xe2, 0xf0, 0x0d, 0xb4, 0xf7, 0x18, 0xfa, 0x07, 0x66, 0x12,
	0xd7, 0xa6, 0x66, 0x12, 0xa3, 0x1e, 0x34, 0x05, 0x5b, 0x85, 0x81, 0x36, 0xb3, 0x48, 0x75, 0xc1,
	0x05, 0x74, 0x8e, 0x33, 0xcb, 0x3c, 0x55, 0x68, 0x0a, 0x2d, 0xc1, 0x22, 0x2e, 0x62, 0xe9, 0x18,
	0x23, 0x6b, 0x6c, 0x7b, 0x83, 0x2a, 0xd8, 0xb1, 0xb0, 0xa4, 0xc9, 0x4e, 0x86, 0xa6, 0xf0, 0xbb,
	0x1e, 0x43, 0xd6, 0x5d, 0xbe, 0x9e, 0x6c, 0xaf, 0xf2, 0xee, 0xc1, 0x5c, 0xfa, 0x28, 0x84, 0xee,
	0xd9, 0x70, 0xe8, 0xa2, 0xec, 0xf6, 0xdd, 0x9e, 0xc3, 0x5e, 0xc9, 0x9e, 0x46, 0xc6, 0x0d, 0x2f,
	0x00, 0x6b, 0xe6, 0xfb, 0xe8, 0x16, 0xe0, 0xf0, 0xa2, 0xa8, 0x5f, 0x8a, 0xcf, 0xbe, 0xd7, 0x70,
	0x70, 0x0a, 0x57, 0x0f, 0x8f, 0x1b, 0x77, 0xad, 0xc7, 0xa6, 0xfe, 0x96, 0x1f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x63, 0xcf, 0xa9, 0x6d, 0xc5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VAClient is the client API for VA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VAClient interface {
	PerformValidation(ctx context.Context, in *PerformValidationRequest, opts ...grpc.CallOption) (*ValidationResult, error)
}

type vAClient struct {
	cc *grpc.ClientConn
}

func NewVAClient(cc *grpc.ClientConn) VAClient {
	return &vAClient{cc}
}

func (c *vAClient) PerformValidation(ctx context.Context, in *PerformValidationRequest, opts ...grpc.CallOption) (*ValidationResult, error) {
	out := new(ValidationResult)
	err := c.cc.Invoke(ctx, "/va.VA/PerformValidation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VAServer is the server API for VA service.
type VAServer interface {
	PerformValidation(context.Context, *PerformValidationRequest) (*ValidationResult, error)
}

// UnimplementedVAServer can be embedded to have forward compatible implementations.
type UnimplementedVAServer struct {
}

func (*UnimplementedVAServer) PerformValidation(ctx context.Context, req *PerformValidationRequest) (*ValidationResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PerformValidation not implemented")
}

func RegisterVAServer(s *grpc.Server, srv VAServer) {
	s.RegisterService(&_VA_serviceDesc, srv)
}

func _VA_PerformValidation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerformValidationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VAServer).PerformValidation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/va.VA/PerformValidation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VAServer).PerformValidation(ctx, req.(*PerformValidationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "va.VA",
	HandlerType: (*VAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PerformValidation",
			Handler:    _VA_PerformValidation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "va/proto/va.proto",
}

// CAAClient is the client API for CAA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CAAClient interface {
	IsCAAValid(ctx context.Context, in *IsCAAValidRequest, opts ...grpc.CallOption) (*IsCAAValidResponse, error)
}

type cAAClient struct {
	cc *grpc.ClientConn
}

func NewCAAClient(cc *grpc.ClientConn) CAAClient {
	return &cAAClient{cc}
}

func (c *cAAClient) IsCAAValid(ctx context.Context, in *IsCAAValidRequest, opts ...grpc.CallOption) (*IsCAAValidResponse, error) {
	out := new(IsCAAValidResponse)
	err := c.cc.Invoke(ctx, "/va.CAA/IsCAAValid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CAAServer is the server API for CAA service.
type CAAServer interface {
	IsCAAValid(context.Context, *IsCAAValidRequest) (*IsCAAValidResponse, error)
}

// UnimplementedCAAServer can be embedded to have forward compatible implementations.
type UnimplementedCAAServer struct {
}

func (*UnimplementedCAAServer) IsCAAValid(ctx context.Context, req *IsCAAValidRequest) (*IsCAAValidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsCAAValid not implemented")
}

func RegisterCAAServer(s *grpc.Server, srv CAAServer) {
	s.RegisterService(&_CAA_serviceDesc, srv)
}

func _CAA_IsCAAValid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsCAAValidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CAAServer).IsCAAValid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/va.CAA/IsCAAValid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CAAServer).IsCAAValid(ctx, req.(*IsCAAValidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CAA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "va.CAA",
	HandlerType: (*CAAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsCAAValid",
			Handler:    _CAA_IsCAAValid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "va/proto/va.proto",
}
