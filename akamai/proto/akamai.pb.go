// Code generated by protoc-gen-go. DO NOT EDIT.
// source: akamai/proto/akamai.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/zzma/boulder/core/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PurgeRequest struct {
	Urls                 []string `protobuf:"bytes,1,rep,name=urls" json:"urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgeRequest) Reset()         { *m = PurgeRequest{} }
func (m *PurgeRequest) String() string { return proto.CompactTextString(m) }
func (*PurgeRequest) ProtoMessage()    {}
func (*PurgeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97376b3b31deb04b, []int{0}
}

func (m *PurgeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgeRequest.Unmarshal(m, b)
}
func (m *PurgeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgeRequest.Marshal(b, m, deterministic)
}
func (m *PurgeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgeRequest.Merge(m, src)
}
func (m *PurgeRequest) XXX_Size() int {
	return xxx_messageInfo_PurgeRequest.Size(m)
}
func (m *PurgeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PurgeRequest proto.InternalMessageInfo

func (m *PurgeRequest) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func init() {
	proto.RegisterType((*PurgeRequest)(nil), "akamai.PurgeRequest")
}

func init() { proto.RegisterFile("akamai/proto/akamai.proto", fileDescriptor_97376b3b31deb04b) }

var fileDescriptor_97376b3b31deb04b = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0xcc, 0x4e, 0xcc,
	0x4d, 0xcc, 0xd4, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x87, 0x70, 0xf4, 0xc0, 0x1c, 0x21, 0x36,
	0x08, 0x4f, 0x4a, 0x34, 0x39, 0xbf, 0x28, 0x15, 0xaa, 0x00, 0xc4, 0x84, 0x48, 0x2b, 0x29, 0x71,
	0xf1, 0x04, 0x94, 0x16, 0xa5, 0xa7, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71,
	0xb1, 0x94, 0x16, 0xe5, 0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x06, 0x81, 0xd9, 0x46, 0x36,
	0x5c, 0x3c, 0x8e, 0x60, 0x43, 0xc0, 0x2a, 0x8b, 0x84, 0x74, 0xb8, 0x58, 0xc1, 0x2c, 0x21, 0x11,
	0x3d, 0xa8, 0x55, 0xc8, 0x46, 0x48, 0x71, 0xeb, 0x81, 0xcd, 0x77, 0xcd, 0x2d, 0x28, 0xa9, 0x54,
	0x62, 0x70, 0x62, 0x8f, 0x62, 0x05, 0x5b, 0x05, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x1f, 0x67,
	0x30, 0xa5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AkamaiPurgerClient is the client API for AkamaiPurger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AkamaiPurgerClient interface {
	Purge(ctx context.Context, in *PurgeRequest, opts ...grpc.CallOption) (*proto1.Empty, error)
}

type akamaiPurgerClient struct {
	cc *grpc.ClientConn
}

func NewAkamaiPurgerClient(cc *grpc.ClientConn) AkamaiPurgerClient {
	return &akamaiPurgerClient{cc}
}

func (c *akamaiPurgerClient) Purge(ctx context.Context, in *PurgeRequest, opts ...grpc.CallOption) (*proto1.Empty, error) {
	out := new(proto1.Empty)
	err := c.cc.Invoke(ctx, "/akamai.AkamaiPurger/Purge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AkamaiPurgerServer is the server API for AkamaiPurger service.
type AkamaiPurgerServer interface {
	Purge(context.Context, *PurgeRequest) (*proto1.Empty, error)
}

// UnimplementedAkamaiPurgerServer can be embedded to have forward compatible implementations.
type UnimplementedAkamaiPurgerServer struct {
}

func (*UnimplementedAkamaiPurgerServer) Purge(ctx context.Context, req *PurgeRequest) (*proto1.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Purge not implemented")
}

func RegisterAkamaiPurgerServer(s *grpc.Server, srv AkamaiPurgerServer) {
	s.RegisterService(&_AkamaiPurger_serviceDesc, srv)
}

func _AkamaiPurger_Purge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AkamaiPurgerServer).Purge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/akamai.AkamaiPurger/Purge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AkamaiPurgerServer).Purge(ctx, req.(*PurgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AkamaiPurger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "akamai.AkamaiPurger",
	HandlerType: (*AkamaiPurgerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Purge",
			Handler:    _AkamaiPurger_Purge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "akamai/proto/akamai.proto",
}
